/* esri-leaflet-gp - v2.0.0 - Mon Sep 14 2015 12:02:08 GMT-0700 (PDT)
 * Copyright (c) 2015 Environmental Systems Research Institute, Inc.
 * Apache-2.0 */
(function(global,factory){typeof exports==="object"&&typeof module!=="undefined"?factory(exports,require("esri-leaflet"),require("leaflet")):typeof define==="function"&&define.amd?define(["exports","esri-leaflet","leaflet"],factory):factory(global.L.esri.GP={},L.esri,L)})(this,function(exports,esri_leaflet,L){"use strict";exports.Task=esri_leaflet.Task.extend({includes:L.Mixin.Events,params:{},resultParams:{},initialize:function(options){esri_leaflet.Task.prototype.initialize.call(this,options);if(!this.options.path){this.options.async=false;this.options.path="execute";this._service.metadata(function(error,results){if(!error){if(results.executionType==="esriExecutionTypeSynchronous"){this.options.async=false;this.options.path="execute"}else{this.options.async=true;this.options.path="submitJob"}this.fire("initialized")}else{this.options.async=false;this.options.path="execute";return}},this)}else{if(this.options.async!==true&&this.options.path!=="submitJob"){this.options.async=false}}},setParam:function(paramName,paramValue){if(typeof paramValue==="boolean"){this.params[paramName]=paramValue;return}else if(typeof paramValue!=="object"){this.params[paramName]=paramValue;return}else{this._setGeometry(paramName,paramValue)}},setOutputParam:function(paramName){this.params.outputParam=paramName},gpAsyncResultParam:function(paramName,paramValue){this.resultParams[paramName]=paramValue},_setGeometry:function(paramName,geometry){var processedInput={geometryType:"",features:[]};if(geometry instanceof L.LatLngBounds){processedInput.features.push({geometry:L.esri.Util.boundsToExtent(geometry)});processedInput.geometryType=L.esri.Util.geojsonTypeToArcGIS(geometry.type)}if(geometry.getLatLng){geometry=geometry.getLatLng()}if(geometry instanceof L.LatLng){geometry={type:"Point",coordinates:[geometry.lng,geometry.lat]}}if(geometry instanceof L.GeoJSON){geometry=geometry.getLayers()[0].feature.geometry;processedInput.features.push({geometry:esri_leaflet.Util.geojsonToArcGIS(geometry)});processedInput.geometryType=esri_leaflet.Util.geojsonTypeToArcGIS(geometry.type)}if(geometry.toGeoJSON){geometry=geometry.toGeoJSON()}if(geometry.type==="Feature"){geometry=geometry.geometry}if(geometry.type==="Point"||geometry.type==="LineString"||geometry.type==="Polygon"){processedInput.features.push({geometry:esri_leaflet.Util.geojsonToArcGIS(geometry)});processedInput.geometryType=esri_leaflet.Util.geojsonTypeToArcGIS(geometry.type)}else{if(console&&console.warn){console.warn("invalid geometry passed as GP input. Should be an L.LatLng, L.LatLngBounds, L.Marker or GeoJSON Point Line or Polygon object")}}this.params[paramName]=processedInput;return},run:function(callback,context){this._done=false;if(this.options.async===true){this._service.request(this.options.path,this.params,function(error,response){this._currentJobId=response.jobId;this.checkJob(this._currentJobId,callback,context)},this)}else{return this._service.request(this.options.path,this.params,function(error,response){callback.call(context,error,response&&this.processGPOutput(response),response)},this)}},checkJob:function(jobId,callback,context){var pollJob=function(){this._service.request("jobs/"+jobId,{},function polledJob(error,response){if(response.jobStatus==="esriJobSucceeded"){if(!this._done){this._done=true;this._service.request("jobs/"+jobId+"/results/"+this.params.outputParam,this.resultParams,function processJobResult(error,response){callback.call(context,error,response&&this.processAsyncOutput(response),response)},this)}window.clearInterval(counter)}else if(response.jobStatus==="esriJobFailed"){callback.call(context,"Job Failed",null);window.clearInterval(counter)}},this)}.bind(this);var counter=window.setInterval(pollJob,this._service.options.asyncInterval*1e3)},processGPOutput:function(response){var processedResponse={};if(this.options.async===false){for(var i=0;i<response.results.length;i++){processedResponse[response.results[i].paramName];if(response.results[i].dataType==="GPFeatureRecordSetLayer"){var featureCollection=esri_leaflet.Util.responseToFeatureCollection(response.results[i].value);processedResponse[response.results[i].paramName]=featureCollection}else{processedResponse[response.results[i].paramName]=response.results[i].value}}}else{processedResponse.jobId=this._currentJobId}if(this.options.async===true&&response.dataType==="GPRasterDataLayer"){var baseURL=this.options.url;var n=baseURL.indexOf("GPServer");var serviceURL=baseURL.slice(0,n)+"MapServer/";processedResponse.outputMapService=serviceURL+"jobs/"+this._currentJobId}return processedResponse},processAsyncOutput:function(response){var processedResponse={};processedResponse.jobId=this._currentJobId;if(this.options.async===true&&response.dataType==="GPRasterDataLayer"){var baseURL=this.options.url;var n=baseURL.indexOf("GPServer");var serviceURL=baseURL.slice(0,n)+"MapServer/";processedResponse.outputMapService=serviceURL+"jobs/"+this._currentJobId}if(response.dataType==="GPFeatureRecordSetLayer"){var featureCollection=esri_leaflet.Util.responseToFeatureCollection(response.value);processedResponse[response.paramName]=featureCollection}else{processedResponse[response.paramName]=response.value}return processedResponse}});function task(options){return new exports.Task(options)}exports.Service=esri_leaflet.Service.extend({options:{asyncInterval:1},createTask:function(){return new exports.Task(this,this.options)}});function service(options){return new exports.Service(options)}exports.VERSION="2.0.0";exports.task=task;exports.service=service});
//# sourceMappingURL=./esri-leaflet-gp.js.map